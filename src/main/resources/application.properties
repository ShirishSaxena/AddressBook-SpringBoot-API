## Server Properties
server.port= 7090
server.error.include-message = always

spring.jpa.properties.hibernate.jdbc.time_zone=UTC


## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url= jdbc:mysql://localhost:3306/assign3rd?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username= adjetter
spring.datasource.password= Analytics@123

## Hibernate Properties
spring.jpa.properties.hibernate.jdbc.batch_size=30
#spring.jpa.properties.hibernate.generate_statistics=true

# Redis cache properties
spring.redis.database=0
spring.redis.host=showy.life
spring.redis.port=6379
spring.redis.password=testCache
spring.redis.timeout=60000

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create

## Hibernate Logging
#logging.level.org.hibernate.SQL= DEBUG
#logging.level.org.hibernate.SQL= TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always

# Error binding
#server.error.include-binding-errors=always

# keep collection alive
spring.datasource.testWhileIdle = true
spring.datasource.timeBetweenEvictionRunsMillis = 3600000
spring.datasource.validationQuery = SELECT 1


# Kafka settings
spring.kafka.bootstrap-servers=500.showy.life:9092

spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer